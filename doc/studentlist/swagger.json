{
    "schemes": [
        "[]string{\"http\"}"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server server.",
        "title": "Gin Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:4000",
    "basePath": "/",
    "paths": {
        "/student": {
            "get": {
                "description": "get all students from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Show student list.",
                "operationId": "get-all-Students",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "struct"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    }
                }
            },
            "post": {
                "description": "create a student and add to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Create a new student.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "struct"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    }
                }
            }
        },
        "/student/:id": {
            "get": {
                "description": "get one student by id from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Show a  student from the list.",
                "operationId": "get-Student-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    }
                }
            },
            "put": {
                "description": "update an existing student by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Update a student.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "struct"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete an existing student by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Delete a student.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "struct"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Student": {
            "type": "object",
            "properties": {
                "adress": {
                    "type": "string"
                },
                "course": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "integer"
                },
                "surname": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}